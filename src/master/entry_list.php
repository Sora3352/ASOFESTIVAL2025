<?php
session_start();
require_once('../../asset/db_connect.php');

if (!isset($_SESSION['username'])) {
    header('Location: login.php');
    exit();
}

$role = $_SESSION['role'] ?? 'staff';

// ===== ÂâäÈô§Âá¶ÁêÜ =====
$can_delete_roles = ['chief', 'vice', 'teacher', 'core'];
if (in_array($role, $can_delete_roles, true) && isset($_POST['delete_id'])) {
    $delete_id = (int) $_POST['delete_id'];

    // ÂØæË±°„Éá„Éº„Çø„ÇíÂÖà„Å´ÂèñÂæóÔºàÂâäÈô§„É≠„Ç∞„Å´ÂêçÂâç„Å™„Å©ÊÆã„Åó„Åü„ÅÑÂ†¥ÂêàÔºâ
    $target_stmt = $pdo->prepare("SELECT name, student_id FROM entries WHERE id = :id");
    $target_stmt->bindValue(':id', $delete_id, PDO::PARAM_INT);
    $target_stmt->execute();
    $target = $target_stmt->fetch(PDO::FETCH_ASSOC);

    // ÂÆüÈöõ„ÅÆÂâäÈô§
    $del = $pdo->prepare("DELETE FROM entries WHERE id = :id");
    $del->bindValue(':id', $delete_id, PDO::PARAM_INT);
    $del->execute();

    // ‚úÖ „É≠„Ç∞Ë®òÈå≤Ôºà„Åì„Åì„ÇíËøΩÂä†Ôºâ
    $log_action = "„Ç®„É≥„Éà„É™„ÉºID {$delete_id}Ôºà" . ($target['name'] ?? '‰∏çÊòé') . "Ôºâ„ÇíÂâäÈô§„Åó„Åæ„Åó„Åü";
    $log = $pdo->prepare("INSERT INTO action_logs 
        (username, role, action, target_table, target_id)
        VALUES (:u, :r, :a, 'entries', :tid)");
    $log->execute([
        ':u' => $_SESSION['name'] ?? $_SESSION['username'],
        ':r' => $_SESSION['role'],
        ':a' => $log_action,
        ':tid' => $delete_id
    ]);

    // ÈÄöÂ∏∏Âá¶ÁêÜ
    $_SESSION['flash_message'] = 'ÂâäÈô§„Åó„Åæ„Åó„Åü„ÄÇ';
    header('Location: entry_list.php');
    exit();
}

// ===== „Éï„É©„ÉÉ„Ç∑„É•„É°„ÉÉ„Çª„Éº„Ç∏ =====
$flash_message = $_SESSION['flash_message'] ?? '';
unset($_SESSION['flash_message']);

// ===== ‰ºÅÁîªÂêç„Éû„ÉÉ„Éî„É≥„Ç∞ =====
$project_labels = [
    'ramune' => '„É©„É†„ÉçÊó©È£≤„Åø',
    'karaoke' => '„Ç´„É©„Ç™„Ç±Â§ß‰ºö',
    'sumabara' => '„Çπ„Éû„Éñ„É©Â§ß‰ºö',
    'bingo' => '„Éì„É≥„Ç¥Â§ß‰ºö',
    'shateki' => 'Â∞ÑÁöÑ',
];

// ===== Ê§úÁ¥¢„ÉªÁµû„ÇäËæº„Åø„Éª‰∏¶„Å≥Êõø„Åà =====
$search = $_GET['search'] ?? '';
$filter_project = $_GET['filter_project'] ?? '';
$filter_class = $_GET['filter_class'] ?? '';
$sort = $_GET['sort'] ?? 'created_at';
$order = $_GET['order'] ?? 'DESC';
$page = isset($_GET['page']) ? max(1, intval($_GET['page'])) : 1;
$limit = 20;
$offset = ($page - 1) * $limit;

// SQL„Éô„Éº„Çπ
$sql_base = "FROM entries WHERE 1";
$params = [];

if ($search !== '') {
    $sql_base .= " AND (name LIKE :search OR project LIKE :search OR class LIKE :search OR student_id LIKE :search)";
    $params[':search'] = '%' . $search . '%';
}
if ($filter_project !== '') {
    $sql_base .= " AND project = :filter_project";
    $params[':filter_project'] = $filter_project;
}
if ($filter_class !== '') {
    $sql_base .= " AND class = :filter_class";
    $params[':filter_class'] = $filter_class;
}

// ‰ª∂Êï∞ÂèñÂæó
$count_stmt = $pdo->prepare("SELECT COUNT(*) " . $sql_base);
$count_stmt->execute($params);
$total_entries = $count_stmt->fetchColumn();
$total_pages = ceil($total_entries / $limit);

// ‰∏¶„Å≥Êõø„Åà
$validSorts = ['project', 'class', 'created_at'];
if (!in_array($sort, $validSorts))
    $sort = 'created_at';
$order = strtoupper($order) === 'ASC' ? 'ASC' : 'DESC';

// „Éá„Éº„ÇøÂèñÂæó
$sql = "SELECT * " . $sql_base . " ORDER BY $sort $order LIMIT :limit OFFSET :offset";
$stmt = $pdo->prepare($sql);
foreach ($params as $k => $v)
    $stmt->bindValue($k, $v);
$stmt->bindValue(':limit', $limit, PDO::PARAM_INT);
$stmt->bindValue(':offset', $offset, PDO::PARAM_INT);
$stmt->execute();
$entries = $stmt->fetchAll(PDO::FETCH_ASSOC);

// ===== Ê®©ÈôêÈñ¢Êï∞ =====
function canEdit($role)
{
    return in_array($role, ['chief', 'vice', 'teacher', 'core', 'leader'], true);
}
function canDelete($role)
{
    return in_array($role, ['chief', 'vice', 'teacher', 'core'], true);
}
?>

<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>„Ç®„É≥„Éà„É™„Éº‰∏ÄË¶ß | ASO FESTIVAL 2025 ÁÆ°ÁêÜ</title>
    <link rel="stylesheet" href="master.css">
    <script>
        function confirmDelete(id) {
            if (confirm("Êú¨ÂΩì„Å´ÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü")) {
                document.getElementById('delete_id').value = id;
                document.getElementById('deleteForm').submit();
            }
        }
    </script>
</head>

<body>
    <header>„Ç®„É≥„Éà„É™„Éº‰∏ÄË¶ß</header>

    <div class="container">
        <?php if ($flash_message): ?>
            <div class="flash"><?= htmlspecialchars($flash_message) ?></div>
        <?php endif; ?>

        <!-- üîç Ê§úÁ¥¢„Éï„Ç©„Éº„É†Ôºà„Éá„Ç∂„Ç§„É≥ÂÆåÂÖ®Á∂≠ÊåÅÔºâ -->
        <form class="search-box" method="get" action="">
            <input type="text" name="search" placeholder="ÂêçÂâç„Éª‰ºÅÁîªÂêç„Éª„ÇØ„É©„Çπ„Å™„Å©„ÅßÊ§úÁ¥¢" value="<?= htmlspecialchars($search) ?>">

            <select name="filter_project">
                <option value="">‰ºÅÁîª„ÇíÈÅ∏Êäû</option>
                <?php foreach ($project_labels as $key => $label): ?>
                    <option value="<?= $key ?>" <?= $filter_project === $key ? 'selected' : '' ?>><?= $label ?></option>
                <?php endforeach; ?>
            </select>

            <select name="filter_class">
                <option value="">„ÇØ„É©„Çπ„ÇíÈÅ∏Êäû</option>
                <?php
                $classList = $pdo->query("SELECT DISTINCT class FROM entries ORDER BY class ASC")->fetchAll(PDO::FETCH_COLUMN);
                foreach ($classList as $cls):
                    ?>
                    <option value="<?= htmlspecialchars($cls) ?>" <?= $filter_class === $cls ? 'selected' : '' ?>>
                        <?= htmlspecialchars($cls) ?>
                    </option>
                <?php endforeach; ?>
            </select>

            <button type="submit">Ê§úÁ¥¢„ÉªÁµû„ÇäËæº„Åø</button>
        </form>

        <!-- üìã „ÉÜ„Éº„Éñ„É´ÔºàUI„Åù„ÅÆ„Åæ„ÅæÔºâ -->
        <div class="table-wrapper">
            <table class="entry-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Â≠¶Á±çÁï™Âè∑</th>
                        <th>Ê∞èÂêç</th>
                        <th>„ÇØ„É©„Çπ</th>
                        <th>‰ºÅÁîª</th>
                        <th>ÁôªÈå≤Êó•ÊôÇ</th>
                        <th>Êìç‰Ωú</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($entries as $entry): ?>
                        <tr>
                            <td><?= htmlspecialchars($entry['id']) ?></td>
                            <td><?= htmlspecialchars($entry['student_id']) ?></td>
                            <td><?= htmlspecialchars($entry['name']) ?></td>
                            <td><?= htmlspecialchars($entry['class']) ?></td>
                            <td><?= htmlspecialchars($project_labels[$entry['project']] ?? htmlspecialchars($entry['project'])) ?>
                            </td>
                            <td><?= htmlspecialchars($entry['created_at']) ?></td>
                            <td>
                                <?php if (canEdit($role)): ?>
                                    <a href="entry_edit.php?id=<?= $entry['id'] ?>" class="edit-btn">Á∑®ÈõÜ</a>
                                <?php else: ?>
                                    <span style="color:#aaa;">Ôºç</span>
                                <?php endif; ?>

                                <?php if (canDelete($role)): ?>
                                    <form method="POST" style="display:inline;">
                                        <input type="hidden" name="delete_id" value="<?= $entry['id'] ?>">
                                        <button type="submit" class="delete-btn"
                                            onclick="return confirm('Êú¨ÂΩì„Å´ÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü');">ÂâäÈô§</button>
                                    </form>
                                <?php else: ?>
                                    <span style="color:#aaa;">Ôºç</span>
                                <?php endif; ?>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>

        <!-- „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ -->
        <?php if ($total_pages > 1): ?>
            <div class="pagination">
                <?php for ($i = 1; $i <= $total_pages; $i++): ?>
                    <?php if ($i == $page): ?>
                        <span class="current-page"><?= $i ?></span>
                    <?php else: ?>
                        <a href="?<?= http_build_query(array_merge($_GET, ['page' => $i])) ?>" class="page-link"><?= $i ?></a>
                    <?php endif; ?>
                <?php endfor; ?>
            </div>
        <?php endif; ?>

        <a href="./master_menu.php" class="back-btn">‚Üê</a>
    </div>
</body>

</html>